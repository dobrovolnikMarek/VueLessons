export default {
    bind(el){//метод bind() вызывается когда инициализируем директиву 
             //принимает 3 параметра: 
             //1) el - тот элемент к которому будет привязываться директива
             //2) bindings - содержаться все необходимые свойства которые 
             //будут передаваться внутрь директивы(например: его значения, различные параметры и т.д.)
             //3) vnode - содержит объект виртуального дерева где будет хранится директива
             //bindings и vnode являются только readOnly
        console.log("bind")
        el.style.color="blue";
    },
    inserted(){
        console.log("inserted")
    },
    update(){
        console.log("update")
    },
    componentUpdated(){
        console.log("componentUpdated")
    },
    unbind(){
        console.log("unbind")
    }
    //Жизненный цикл директивы:
    //1) этап при создании директивы метод bind()
    //2) inserted() принимает те же параметры что и bind()
    //3) метод update() вызывается при изменении DOM что затрагивает директиву 
    //   принимает те же параметры что и bind() + oldVnode(старая нода которая была еще до апдейта)
    //4) componentUpdated() вызывается сразу после метода update() 
    //   если обновились дочерние элементы которые присутствуют в директиве
    //   принимает все те параметры что и update() 
    //5) unbind() вызывется когда директива заканчивает свое существование и убирается из DOM
}